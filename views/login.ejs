<%- include("./partials/header") %>

      <link rel = "stylesheet" href="loginstyle.css">
      <div id="login_div" class = "login-page">

			<div class = "form">
				<div class = "registration-form">   
					<h1> REGISTER</h1>
					<div class="inputWithIcon">
            <input type="text" placeholder="Email" id="email_field1"/> 
           <i class="fa fa-user fa-lg fa-fu" aria-hidden="true"></i>
         </div>
					
				
         <div class="inputWithIcon">
          <input type="password" class="active" placeholder="Password" minlength="8" id="password_field1" required/>
         <i class="fa fa-key fa-lg fa-fu" aria-hidden="true"></i>
       </div>
				
       <div class="inputWithIcon">
        <input type="password" class="active" placeholder="Retype Password" minlength="8" id="password_field3" required/>
       <i class="fa fa-key fa-lg fa-fu" aria-hidden="true"></i>
       </div>
				
					<button class="button" title="Sign Up" onclick="create_account()">Create</button>
					<p class="message" id="login-interface">Already Registered? <a href="#"> Login </a></p>
      </div>

				<div class="login-form">
          <h1> LOGIN</h1>
					<div class="inputWithIcon">
            <input type="text" placeholder="Email" id="email_field2"/> 
           <i class="fa fa-envelope fa-lg fa-fu" aria-hidden="true"></i>
         </div>
				
				
           <div class="inputWithIcon">
            <input type="password" class="active" placeholder="Password" minlength="8" id="password_field2" required/> 
           <i id="icon" class="fa fa-lock fa-lg fa-fu" aria-hidden="true"></i>
           
         </div>
				
					<button id="login" class="button" onclick="login()" title="Login">Login</button>
					<p id="forgot-password"><a href="#">Forgot Password</a></p>
					<p class="message" id="register-interface">Not Registered? <a href="#"> Register </a></p>
				</div>

				
				<div class="forgot-interface">   
          <div class="inputWithIcon">
            <input type="text" placeholder="Email" id="email_field3"/> 
           <i class="fa fa-envelope fa-lg fa-fu" aria-hidden="true"></i>
         </div>
          <button class="button" title="Reset Password" onclick="forgot_password()">Forgot Password</button>
          
					<p class="message"> <a href="#">  </a></p>
				</div>
			</div>
      
	   </div>
	   

	   <!--logout & user div-->
     <div   id="user_div" class="loggedin-div card" >
  <!-- <h3>Welcome!</h3>
    <p id="user_para">You're logged in.</p>
    <button type="button" class="btn btn-primary" type="button" data-toggle="tooltip" data-placement="right" title="Logout"  onclick="logout()">Logout</button>
    <br>
    <button type="button" class="btn btn-primary" type="button" data-toggle="tooltip" data-placement="right" title="Send Verification Email"  id="verify_btn" onclick="send_verification()"> Send Verification Email</button>
    <br>
    <button type="button" class="btn btn-primary" type="button" data-toggle="tooltip" data-placement="right" title="Change Password" onclick="change_pass()"> Change Password </button>
    <br>
    <button type="button" class="btn btn-primary" type="button" data-toggle="tooltip" data-placement="right" title="Delete Account"  onclick="deleteacc()">Delete Account</button>
    -->
<div class=" ui centered container" style="margin-top: 2vh;">
  <div class="ui relaxed stackable grid">
    <!--header menu end-->
    <!--sidebar start-->
    <div class=" three wide column sidebar">
        <div class="sidebar-menu" >
            <div class="sidebar-item ">
                <button class="black colored ui fluid button" onclick="displayMainPage('dashboard-page')">
                    <i class="grey colored desktop icon "></i><span> Dashboard</span>
                </button>
            </div>
            <hr>
            <div class="sidebar-item">
                <button class="black colored ui fluid button" onclick="displayMainPage('profile-page')">
                    <i class="grey colored user circle icon"></i><span> Profile </span>
                </button>
            </div>
            <hr>
            <div class="sidebar-item">
                <button class="black colored ui fluid button" onclick="displayMainPage('Manage-Hospital')">
                    <i class="grey colored hospital outline icon"></i><span> Manage</span>
                </button>
            </div>
            <hr>
            <div class="sidebar-item">
                <button id="chatpage" class="black colored ui fluid button" onclick="displayMainPage('chat')">
                    <i class="grey colored envelope outline icon"></i><span> Chat</span>
                </button>
            </div>
            <hr>
            <div class="sidebar-item">
                <button class="black colored ui fluid large button" onclick="displayMainPage('settings-page')">
                    <i class="grey colored settings icon"></i><span> Settings</span>
                </button>
            </div>
            <hr>
            <div class="sidebar-item">
                <button class="black colored ui fluid button" onclick="logout(); remove_online(firebase.auth().currentUser);">
                  <i class="grey colored share square outline icon"></i></i><span> Logout</span>
                </button>
            </div>
        </div>
    </div>
    
    <div class="twelve wide column page-area" >
      <div class="main-item" id="dashboard-page" >
        <div class="ui header">DASHBOARD</div>
        <hr>
        <!--Starting Firebase Cloud Storage-->
        Upload Progress : <progress value="0" max="100" id="uploader">0%</progress>
        <br>
        Choose your file [must be in bmp, jpg, png, or pbm] : <br><input type="file" value="upload" id="fileBtn">
        <br>
        <br>
        Analysis goes here :
        <div id="analysis"></div>
        <br>
        <br>
        Result : <div id="res" style="display: inline; color: orchid;">Pending</div>
      </div>
      <div class="main-item" id="profile-page" style="display:none;">
        <div class="ui header">PROFILE<button class="ui mini positive right floated button">EDIT</button></div>
        <hr>
        <form>
          <div class="ui container">
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                X
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                Y
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                FID
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                Hospital Name
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                Hospital Type
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                HQ Address
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                HQ City
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                HQ State
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                HQ Zip Code
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                Country
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                State
              </div>
              <input type="text">
            </div>
            <div class="ui fluid labeled input">
              <div class="ui basic label">
                FIPS
              </div>
              <input type="text">
            </div>
          </div>
        </form>
      </div>
      <div class="main-item" id="Manage-Hospital" style="display:none;">
        <div class="ui header">RESOURCE MANAGEMENT<button class="ui mini positive right floated button">EDIT</button></div>
        <hr>
        <form>
        <div class="ui container">
          <div class="ui fluid labeled input">
            <div class="ui basic label">
              Licensed Beds
            </div>
            <input type="text">
          </div>
          <div class="ui fluid labeled input">
            <div class="ui basic label">
              Staffed Beds
            </div>
            <input type="text">
          </div>
          <div class="ui fluid labeled input">
            <div class="ui basic label">
              ICU Beds
            </div>
            <input type="text">
          </div>
          <div class="ui fluid labeled input">
            <div class="ui basic label">
              Adult ICU Beds
            </div>
            <input type="text">
          </div>
          <div class="ui fluid labeled input">
            <div class="ui basic label">
              Ped ICU Beds
            </div>
            <input type="text">
          </div>
          <div class="ui fluid labeled input">
            <div class="ui basic label">
              Bed Utilization
            </div>
            <input type="text">
          </div>
          <div class="ui fluid labeled input">
            <div class="ui basic label">
              Potential Increase in Bed Capacity
            </div>
            <input type="text">
          </div>
          <div class="ui fluid labeled input">
            <div class="ui basic label">
              Average Ventilator Usage
            </div>
            <input type="text">
          </div>
        </div>
        </form>
      </div>
      <div class="main-item" id="chat" style="display:none;">
          <div class="ui header">CHAT PAGE <br> </div>
          <h3 id="stat">Status : Online </h3><i id="statusie" class="fa fa-toggle-on" aria-hidden="true"></i><a id="toggle" onclick="toggle_status()">&ensp;<i class="fa fa-bullseye" aria-hidden="true"></i></a>
          <h5>Online Hospitals (<i id="online_number")></i>)</h5>
          Online Members : <i id="online_member"></i>
          <br>
          <hr>
          <br>
          <div class= "ui small message" >
            <button class="ui circular facebook icon button">
              <i class="facebook icon"></i>
            </button>
            <button class="ui circular twitter icon button">
              <i class="twitter icon"></i>
            </button>
            <button class="ui circular linkedin icon button">
              <i class="linkedin icon"></i>
            </button>
            <button class="ui circular google plus icon button">
              <i class="google plus icon"></i>
            </button>
            <div class="ui right floated compact menu">
              <a class="item">
                <i class="red colored icon mail"></i> Messages
                <div class="floating ui red label">7</div>
              </a>
              <a class="item">
                <i class="blue colored icon users"></i> Friends
                <div class="floating ui teal label">10</div>
              </a>
            </div>
            <h2 class="ui center aligned icon header">
              <i class="red colored circular envelope icon"></i>
              Messages
            </h2>
                
            <div class="chat">
              <div class
              
                  <div class="chatboxin">
              
              
                    <div class="chat-container">
                      <div class="chat-sender msg">
                        <i class="red colored heartbeat icon"></i>
                        <strong>Sender</strong>
                        <div class="chatmsg">hi</div>
                      </div>
                    </div>
              
              
                    <div class="chat-container">
                      <div class="chat-respond msg">
                      
                        <div class="flippd">
                          <i class="green colored user md icon"></i>
                          <strong>Responder</strong>
                          <div class="chatmsg"> Hey 
                          </div>
                        </div>
                      </div>
                      
                    </div>
              
              
                    <div class="chat-container">
                     
                      <div class="chat-sender msg">
                        <i class="red colored heartbeat icon"></i>
                        <strong>Sender</strong>
                        <div class="chatmsg">Hi</div>
                      </div>
                    </div>
              
              
                    <div class="chat-container">
                      <div class="chat-respond msg">
                       
                        <div class="flippd">
                          <i class="green colored user md icon"></i>
                          <strong>Responder</strong>
                          <div class="chatmsg"> Hi
                          </div>
                        </div>
                      </div>
                 
                    </div>
              
              
                  </div>
                </div>
              


          </div>
          <div class="ui fluid icon input">
          <input id="chat_input" placeholder="Type something.....">
               
        </input>
        <button class="ui primary button" id="chat_btn">Send</button> 
        </div>
           
             </div>
      <div class="main-item" id="settings-page" style="display: none;">
        <div class="ui header">SETTINGS</div>
        <hr>
      </div>
    </div> 
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-app.js"></script>
<script src="https://unpkg.com/tesseract.js@v2.1.0/dist/tesseract.min.js"></script>
<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
	 <script src="https://www.gstatic.com/firebasejs/4.8.1/firebase.js"></script>
<script>
  // Your web app's Firebase configuration
  var firebaseConfig = {
    apiKey: "AIzaSyChax-RIyl8an4nKJA0XLdIc8CyU3jeGgY",
    authDomain: "here-maps-bitsians.firebaseapp.com",
    databaseURL: "https://here-maps-bitsians.firebaseio.com",
    projectId: "here-maps-bitsians",
    storageBucket: "here-maps-bitsians.appspot.com",
    messagingSenderId: "517005193635",
    appId: "1:517005193635:web:846d53aebc789427b0ea16"
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);

  // Get a reference to the database service
  var database = firebase.database();

</script>
	<script>
    var inputPass2 = document.getElementById('password_field2'),
    icon = document.getElementById('icon');
 
   icon.onclick = function () {
 
     if(inputPass2.className == 'active') {
        inputPass2.setAttribute('type', 'password');
        icon.className = 'fa fa-lock fa-lg fa-fu';
       inputPass2.className = 'inactive';
 
     } else {
        inputPass2.setAttribute('type', 'text');
        icon.className = 'fa fa-unlock fa-lg fa-fu';
       inputPass2.className = 'active';
    }
   }

function toggle_status(){
  
  var onlineIcon = document.getElementById("statusie"),
      toggle = document.getElementById("toggle"),
      stat = document.getElementById("stat");
        
        if(onlineIcon.className == "fa fa-toggle-on"){
          onlineIcon.className = "fa fa-toggle-off";
          stat.innerHTML = "Status : Offline";
        }else{
          onlineIcon.className = "fa fa-toggle-on";
          stat.innerHTML = "Status : Online";
        }
        
        }
     
    var currentUser;
  
		function writeUserData(user) {
    firebase.database().ref('users/' + user.uid).set({
      email: user.email
    });
  }
    
  firebase.auth().onAuthStateChanged(function(user) {
    if (user) {
      // User is signed in.
  
      document.getElementById("user_div").style.display = "block";
      document.getElementById("login_div").style.display = "none";

          
      var currentUser = user;
      
  
  
      if(user != null){
  
        var email_id = user.email;
        var email_verfied = user.emailVerified;
  
        if(email_verfied){
          document.getElementById("verify_btn").style.display = "none";
        }else{
          document.getElementById("verify_btn").style.display = "block";
        }
        document.getElementById("user_para").innerHTML = "User : " + email_id + "<br> Verfied : " + email_verfied;
  
  
      }
  
    } else {
      // No user is signed in.
  
      document.getElementById("user_div").style.display = "none";
      document.getElementById("login_div").style.display = "block";
    }
  });
  
  
  
  
  
  function login(){
  
    var userEmail = document.getElementById("email_field2").value;
    var userPass = document.getElementById("password_field2").value;
  
    firebase.auth().signInWithEmailAndPassword(userEmail, userPass).catch(function(error) {
      // Handle Errors here.
      var errorCode = error.code;
      var errorMessage = error.message;
  
      window.alert("Error : " + errorMessage);
  
      // ...
    });
  
  }
  
  
function create_account(){
  
    var userEmail = document.getElementById("email_field1").value;
    var userPass = document.getElementById("password_field1").value;
  
    firebase.auth().createUserWithEmailAndPassword(userEmail, userPass).catch(function(error) {
      // Handle Errors here.
      var errorCode = error.code;
      var errorMessage = error.message;
  
      window.alert("Error : " + errorMessage);
    });
  }
  
  function send_verification(){
  
    var user = firebase.auth().currentUser;
  
    user.sendEmailVerification().then(function() {
      // Email sent.
      window.alert("Verification Sent! Check your email!");
    }).catch(function(error) {
      // An error happened.
      window.alert("Err!");
    });
    
  
  
  }
  
  function forgot_password(){
  
    var userEmail = document.getElementById("email_field3").value;
    
    var auth = firebase.auth();
    
  var emailAddress = userEmail;
  
  auth.sendPasswordResetEmail(emailAddress).then(function() {
    // Email sent.
    window.alert("Password reset link has been generated!");
  }).catch(function(error) {
    // An error happened.
    window.alert("Err!");
  });
  
  }
  
  
  function deleteacc(){
  
    var rand = Math.round(Math.random()*100000);
    if(window.prompt("Type the number to confirm \n " + "\t\t" + rand) == rand)
    {
      var user = firebase.auth().currentUser;
      var userProvidedPassword = window.prompt("Re-enter your Password");
      var credential = firebase.auth.EmailAuthProvider.credential(
        user.email, 
        userProvidedPassword
    );
  
  // Prompt the user to re-provide their sign-in credentials
  
  user.reauthenticateWithCredential(credential).then(function() {
    // User re-authenticated.
  }).catch(function(error) {
    // An error happened.
  });
  
  user.delete().then(function() {
    // User deleted.
    window.alert("User deleted");
  }).catch(function(error) {
    // An error happened.
    window.alert("User NOT deleted!");
  });
  
  
    }else{
      window.alert("Err! Please type "+rand);
    }
    
  }
  
  function change_pass(){
  
  
  var user = firebase.auth().currentUser;
      var userProvidedPassword = window.prompt("Enter your old Password : ");
      var credential = firebase.auth.EmailAuthProvider.credential(
        user.email, 
        userProvidedPassword
    );
  
  // Prompt the user to re-provide their sign-in credentials
  
  user.reauthenticateWithCredential(credential).then(function() {
    // User re-authenticated.
      var user = firebase.auth().currentUser;
    var newPassword = window.prompt("Enter your new Password : ");
  
    user.updatePassword(newPassword).then(function() {
      // Update successful.
      window.alert("Password Updated!");
    }).catch(function(error) {
      // An error happened.
      window.alert("Password NOT Updated!");
    });
    
  }).catch(function(error) {
    // An error happened.
    window.alert("Password NOT Updated!");
  });
  
  }
  
  
  function logout(){
    firebase.auth().signOut();
  }
  
  function add_online(h){
  firebase.database().ref('online/' + h.user_id).set(h);
}
$('#chatpage').click(function(){
  var online = {
    user_id: firebase.auth().currentUser.uid,
    email: firebase.auth().currentUser.email
  };

  add_online(online);

  });

function remove_online(h){
    firebase.database().ref('online/' + h.uid).remove();
  }
  $('#toggle').click(function(){
    if(document.getElementById("stat").innerHTML == "Status : Offline")
      remove_online(firebase.auth().currentUser);
    else{
      var online = {
    user_id: firebase.auth().currentUser.uid,
    email: firebase.auth().currentUser.email
    };
    add_online(online);
    }
 });

 var addonref = firebase.database().ref().child("online");
 addonref.on("value", function(snapshot) {
      $("#online_member").empty();
      $("#online_number").empty();
      var cabHTMLitem="";
      var onHTMLitem=0;
      snapshot.forEach(function(childsnapshot){
        var item = childsnapshot.val();
        cabHTMLitem += "<br>"+item.email + ",";
        onHTMLitem++;
    });
    $("#online_member").html(cabHTMLitem);
    $("#online_number").html(onHTMLitem);
  });


  var cnt = 0;
  function add_chat(h){
  firebase.database().ref('chat/' +Date()  +'_'+h.user_id+'@'+cnt).set(h);
}

  $('#chat_btn').click(function(){
    document.getElementById("chat_display").innerHTML += "<h5>"+firebase.auth().currentUser.email + "</h5> : " + document.getElementById("chat_input").value + "<br>";
    
    var message = {
      user_id: firebase.auth().currentUser.uid,
      email: firebase.auth().currentUser.email,
      message: document.getElementById("chat_input").value,
      count: Date()+'_'+cnt,
      time: new Date().toLocaleString()
    };
    
  add_chat(message);
  cnt++
    document.getElementById("chat_input").value = "";
 });

 var chatonref = firebase.database().ref().child("chat");
 chatonref.on("value", function(snapshot) {
      
      var chatHTMLitem="";
      snapshot.forEach(function(childsnapshot){
        
        var item = childsnapshot.val();
        chatHTMLitem += "<br>"+ item.email + " : "+item.message;
        
    });
    $("#chat_display").html(chatHTMLitem);

  });


//Firebase Uploader

var uploader = document.getElementById('uploader');
var fileBtn = document.getElementById('fileBtn');

fileBtn.addEventListener('change',function(e) {
    var file = e.target.files[0];
    var loc = URL.createObjectURL(event.target.files[0])+'';
    var storageRef = firebase.storage().ref('hospital_id/'+firebase.auth().currentUser.email+'_'+file.name);
    var task = storageRef.put(file);
    var anal_div = document.getElementById('analysis');
    task.on('state_changed',
      function progress(snapshot){
        var percentage = (snapshot.bytesTransferred/snapshot.totalBytes) * 100;
        uploader.value = percentage;
      },
      function error(err){
          //write some error here please
          alert("Error");
      },
      function complete(){
        //function when complete
        alert("Done");
        alert("Analysis will start in a while . . .");
        document.getElementById('analysis').innerHTML = "Processing . . .";
        Tesseract.recognize(
          loc,
            'eng',
            { logger: m => console.log(m) }
          ).then(({ data: { text } }) => {
            document.getElementById('analysis').innerHTML = text;
            if(text.search("Hospital") < 0 && text.search("hospital") < 0 && text.search("HOSPITAL") < 0){
                document.getElementById('res').innerHTML = "Failed!";
                document.getElementById('res').style.color = "red";
            }else{
                document.getElementById('res').innerHTML = "Passed.";
                document.getElementById('res').style.color = "green";
            }
          })
      }
    );
});
</script>

<script> document.getElementById("log-in").classList.add("active"); </script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.js" integrity="sha256-t8GepnyPmw9t+foMh3mKNvcorqNHamSKtKRxxpUEgFI=" crossorigin="anonymous"></script>
<script src="design.js"></script>
<script>
    //watson addon assitant (build incomplete)
window.watsonAssistantChatOptions = {
integrationID: "5e79a775-134a-4d7c-a0f1-9f70133207ac", // The ID of this integration.
region: "au-syd", // The region your integration is hosted in.
serviceInstanceID: "ff546963-32f2-41c0-8f8f-5f76b6340b62", // The ID of your service instance.
onLoad: function(instance) { instance.render(); }
};
setTimeout(function(){
    const t=document.createElement('script');
    t.src="https://web-chat.global.assistant.watson.appdomain.cloud/loadWatsonAssistantChat.js";
    document.head.appendChild(t);
});
</script>
</body>
</html>
